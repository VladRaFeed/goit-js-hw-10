{"mappings":"AAkBA,SAASA,EAAcC,GACnB,OAAOC,MAAM,wDAAuCD,IAAS,CAC7DE,QAAS,CACL,YAnBQ,2EAqBTC,MAAKC,IACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,G,CCzB9B,MAAMC,EAAUC,SAASC,cAAc,aACjCC,EAAWF,SAASC,cAAc,iBAClCE,EAAUH,SAASC,cAAc,WACjCG,EAAQJ,SAASC,cAAc,UA6BrC,SAASI,EAAaC,GACpBP,EAAQQ,UAAY,uBACFD,EAAI,GAAGE,aAAaF,EAAI,GAAGG,OAAO,GAAGC,6BAC3CJ,EAAI,GAAGG,OAAO,GAAGC,yBAClBJ,EAAI,GAAGG,OAAO,GAAGE,+CACDL,EAAI,GAAGG,OAAO,GAAGG,2B,CAkB9C,SAASC,IACPV,EAAQW,MAAMC,QAAU,M,CAO1B,SAASC,IACPZ,EAAMU,MAAMC,QAAU,O,CA5DxBX,EAAMU,MAAMC,QAAU,OAEtBb,EAASe,iBAAiB,UAmC1B,SAAoBC,GAmBlBf,EAAQW,MAAMC,QAAU,QAjBxBhB,EAAQQ,UAAY,GACpBlB,EAAc6B,EAAEC,OAAOC,OACpB3B,KAAKY,GACLgB,OAAMC,IACLC,QAAQC,IAAIF,GACZN,GAAW,IAEZS,SAAQ,KACPZ,GAAY,G,ID/CPtB,MAAM,sCAAsB,CACnCC,QAAS,CACL,YANQ,2EAQTC,MAAKC,IACJ,IAAKA,EAASC,GACV,MAAM,IAAIC,MAAMF,EAASG,QAE7B,OAAOH,EAASI,MAAM,ICH3BL,MAMH,SAAwBgB,GACtBA,EAAOiB,SAAQC,IACb,MAAMC,EAAS5B,SAAS6B,cAAc,UACtCD,EAAOR,MAAQO,EAAMG,GACrBF,EAAOG,YAAcJ,EAAMjB,KAC3BR,EAAS8B,YAAYJ,GACrBf,GAAY,IAGdxB,EAAcoB,EAAO,GAAGqB,IACrBrC,KAAKY,GACLgB,OAAMY,IACLV,QAAQC,IAAIS,GACZjB,GAAW,G,IAlBdK,OAAMa,IACLX,QAAQC,IAAIU,GACZlB,GAAW","sources":["src/js/cat-api.js","src/js/index.js"],"sourcesContent":["export {fetchBreeds, fetchCatBreed}\n\nconst API_KEY = 'live_JRDiqhjq8lH6Gl1Jk7NT98Xboh8OYBUcN8KEh2sPUrxiISZp8V31uHpKbTTYFSwx'\nconst BASE_URL = 'https://api.thecatapi.com/v1'\n\nfunction fetchBreeds() {\n    return fetch(`${BASE_URL}/breeds`, {\n    headers: {\n        'x-api-key': API_KEY,\n    }\n    }).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status)\n        }\n        return response.json()\n    })\n}\n\nfunction fetchCatBreed(catId) {\n    return fetch(`${BASE_URL}/images/search?breed_ids=${catId}`, {\n    headers: {\n        'x-api-key': API_KEY,\n    }\n    }).then(response => {\n        if (!response.ok) {\n            throw new Error(response.status)\n        }\n        return response.json()\n    })\n}","import { fetchBreeds, fetchCatBreed } from './cat-api';\n\nconst catInfo = document.querySelector('.cat-info');\nconst selector = document.querySelector('.breed-select');\nconst loading = document.querySelector('.loader');\nconst error = document.querySelector('.error');\nerror.style.display = 'none';\n\nselector.addEventListener('change', reloadInfo);\n\nfetchBreeds()\n  .then(showBreedsInfo)\n  .catch(error => {\n    console.log(error);\n    showError();\n  });\n\nfunction showBreedsInfo(breeds) {\n  breeds.forEach(breed => {\n    const option = document.createElement('option');\n    option.value = breed.id;\n    option.textContent = breed.name;\n    selector.appendChild(option);\n    hideLoader();\n  });\n\n  fetchCatBreed(breeds[0].id)\n    .then(addMarkupCat)\n    .catch(error => {\n      console.log(error);\n      showError();\n    });\n}\n\nfunction addMarkupCat(cat) {\n  catInfo.innerHTML = `\n        <img src=\"${cat[0].url}\" alt=\"${cat[0].breeds[0].name}\"></img>\n        <h2>${cat[0].breeds[0].name}</h2>\n        <p>${cat[0].breeds[0].description}</p>\n        <p><b>Temperament: ${cat[0].breeds[0].temperament}</b></p>\n    `;\n}\n\nfunction reloadInfo(e) {\n  showLoader();\n  catInfo.innerHTML = '';\n  fetchCatBreed(e.target.value)\n    .then(addMarkupCat)\n    .catch(error => {\n      console.log(error);\n      showError();\n    })\n    .finally(() => {\n      hideLoader();\n    });\n}\n\nfunction hideLoader() {\n  loading.style.display = 'none';\n}\n\nfunction showLoader() {\n  loading.style.display = 'block';\n}\n\nfunction showError() {\n  error.style.display = 'block';\n}\n"],"names":["$c4ebbd28ee7007ee$export$decc3a9a2dbb651a","catId","fetch","headers","then","response","ok","Error","status","json","$85a5f86b715fe7db$var$catInfo","document","querySelector","$85a5f86b715fe7db$var$selector","$85a5f86b715fe7db$var$loading","$85a5f86b715fe7db$var$error","$85a5f86b715fe7db$var$addMarkupCat","cat","innerHTML","url","breeds","name","description","temperament","$85a5f86b715fe7db$var$hideLoader","style","display","$85a5f86b715fe7db$var$showError","addEventListener","e","target","value","catch","error3","console","log","finally","forEach","breed","option","createElement","id","textContent","appendChild","error2","error1"],"version":3,"file":"index.abe2041e.js.map"}